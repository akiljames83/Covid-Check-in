{"version":3,"sources":["firebase.js","components/Register/signup.jsx","components/Navbar/navbar.jsx","components/Register/login.jsx","components/Register/logout.jsx","components/home.jsx","components/checkin.jsx","components/search.jsx","components/Search/searchStore.jsx","components/Search/filter.jsx","components/Search/map.jsx","components/Admin/createStore.jsx","components/Admin/allStores.jsx","Apps.js","serviceWorker.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","googleProvider","auth","GoogleAuthProvider","analytics","SignUp","props","handleChange","event","setState","name","target","value","authEmailPassword","bind","state","redirect","preventDefault","console","log","email","this","emailInput","password","passwordInput","user","fetchSignInMethodsForEmail","then","providers","length","createUserWithEmailAndPassword","history","push","axios","method","url","data","response","catch","error","finsihAxios","indexOf","loginForm","reset","alert","currentUser","onAuthStateChanged","uid","firebaseId","to","Fragment","className","onSubmit","ref","form","htmlFor","type","onChange","id","aria-describedby","placeholder","input","Component","Navbar","authenticated","Login","authWithGoogle","signInWithPopup","result","signInWithEmailAndPassword","onClick","Logout","signOut","style","height","textAlign","Home","color","CheckIn","Search","SearchStore","aria-label","Filter","mapStyles","width","MapContainer","theLat","theLng","margin","justifyContent","marginTop","marginBottom","google","zoom","initialCenter","lat","lng","GoogleApiWrapper","createStore","action","step","AllStores","stores","get","res","map","store","React","Apps","loading","removeAuthListener","userName","exact","path","component","Map","allStores","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"js/main.9268ac6e.chunk.js","sourcesContent":["import firebase from \"firebase\"\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDdnZQkBPyg0tMfD873IM5hXutIHFb4UY8\",\n    authDomain: \"covid-checkin-4cfae.firebaseapp.com\",\n    databaseURL: \"https://covid-checkin-4cfae.firebaseio.com\",\n    projectId: \"covid-checkin-4cfae\",\n    storageBucket: \"covid-checkin-4cfae.appspot.com\",\n    messagingSenderId: \"909798680205\",\n    appId: \"1:909798680205:web:02bd646b8dc0239e9764c4\",\n    measurementId: \"G-9Y6KWK7EGP\"\n};\n\n// Initialize Firebase\nconst app = firebase.initializeApp(firebaseConfig);\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\nfirebase.analytics();\n\nexport { app, googleProvider }","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { app } from \"../../firebase\";\nimport Apps from \"../../Apps\";\n\nimport firebase from \"firebase\"\nimport \"firebase/auth\";\nimport Navbar from \"../Navbar/navbar\";\nimport axios from 'axios';\n\nclass SignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.authEmailPassword = this.authEmailPassword.bind(this);\n        // this.userName= this.userNameInput(this);\n        this.state = {\n            redirect: false,\n            name: \"\",\n            // email: \"\",\n            // id: 6\n        }\n        // this.handleChange = this.handleChange.bind(this);\n        // this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    // tracks changes on input value to username, paramter passed in is event from username input\n      handleChange = event => {\n        //   anything added in the name input of form is added to state\n        this.setState({ name: event.target.value });\n        // this.setState({ email: event.target.value });\n        // this.setState({id: firebase.auth().currentUser});\n      }\n\n    authEmailPassword(event) {\n        // Stops broswer from reloading the page\n        event.preventDefault();\n        console.log(\"authed with email\");\n        const email = this.emailInput.value;\n        const password = this.passwordInput.value;\n        console.log(email);\n        const user = {\n            name: this.state.name,\n            email: this.state.email,\n            // id: this.state.id\n        };\n        // this will check if anyone has the email \n        app.auth().fetchSignInMethodsForEmail(email)\n            .then((providers) => {\n                // determines if person doesn't have an account\n                if (providers.length === 0) {\n                    // create user\n                    app.auth().createUserWithEmailAndPassword(email, password);\n                    this.props.history.push('/');\n            \n                    // console.log('uid',data.user.uid)\n                    // console.log('userid: '+ user.uid);\n                    // let firebaseId= user.uid;\n                    // firebase.auth().createUserWithEmailAndPassword(email, password)\n                    // .then(function(user){\n                    // });\n                    // stackoverflow stuff and axios call , we will then have user id and name and email\n                    axios({\n                        method:'post',\n                        url:'/api/createUser',\n                        // data to be passed to backend\n                        data: {\n                            user: user,\n                            // firbaseId: firbaseId\n                        }\n                    }).then(function (response) {\n                        //   console.log(\"response:\" + response);\n                        //   console.log(\"response.data:\" + response.data);\n                        })\n                        .catch(function (error) {\n                          console.log(error);\n                        });  \n                        this.finsihAxios();\n                    // return (<Redirect to=\"/\" />);\n                }\n                else if (providers.indexOf(\"password\") === -1) {\n                    // they used google \n                    this.loginForm.reset();\n                    alert(\"Email already In use\");\n                } else {\n                    alert(\"failed to create user, try again later\");\n                    console.log(\"failed to create user\");\n                }\n            })\n            .then((user) => {\n                if (user && user.email) {\n                    console.log(\"here?\")\n                    var user = firebase.auth().currentUser;\n                    console.log(\"user: \"+ user);\n                    this.loginForm.reset();\n                    this.setState({ redirect: true });\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n                alert(error);\n            })\n    }\n\n    finsihAxios(){\n        // let firebaseId= 5;\n\n        var user = app.auth().currentUser;\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                var user = app.auth().currentUser;\n                console.log(\"user.uid:\"+ user.uid);\n                const firebaseId = user.uid; \n                console.log(\"id: \" + firebaseId);\n                axios({\n                    method:'post',\n                    url:'/api/createUser',\n                    // data to be passed to backend\n                    data: {\n                        firebaseId: firebaseId\n                    }\n                })\n\n            }\n        });       \n        // console.log(\"user: \"+ user);\n        // if (user != null) {\n        //     console.log(\"user.uid:\"+ user.uid);\n        //     let firebaseId = user.uid; \n        // }\n    }\n\n    // onClick={this.finsihAxios}\n\n    render() {\n        if (this.state.redirect) {\n            return (<Redirect to='/' />);\n        }\n        return (\n            <React.Fragment>\n                <div className=\"loginPage\">\n                    <h1>SignUp</h1>\n                    <form onSubmit={(event) => { this.authEmailPassword(event) }} ref={(form) => { this.loginForm = form }}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"exampleInputUsername\">Username</label>\n                            {/* <input type=\"text\" name=\"userName\" value={this.props.value} onChange={this.handleChange} />    */}\n                            <input type=\"text\" name=\"name\" onChange={this.handleChange} /> \n                            {/* <input type=\"text\" name=\"name\" placeholder=\"Username\" ref={(input) => { this.userNameInput = input }}  value={this.state.userName} onChange={this.handleUserName} userName={this.state.userName} onChange={this.handleChange} /> */}\n                            {/* <input type=\"name\" name=\"name\" className=\"form-control\" id=\"exampleInputUsername\" placeholder=\"Username\" ref={(input) => { this.userNameInput = input }} ></input> */}\n                            {/* <input type=\"name\" name=\"name\" className=\"form-control\" id=\"exampleInputUsername\" placeholder=\"Username\" ref={(input) => { this.sendData() = input }}></input> */}\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                            <input type=\"email\" name=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" ref={(input) => { this.emailInput = input }} onChange={this.handleChange}></input>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"exampleInputPassword1\">Password</label>\n                            <input type=\"password\" name=\"pass\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" ref={(input) => { this.passwordInput = input }} ></input>\n                        </div>\n                        <div>\n                            <button type=\"submit\" className=\"btn btn-primary\" >Create User</button>\n\n                        </div>\n                    </form>\n                </div>   \n                <div>\n                </div>\n            </React.Fragment>\n            );\n    }\n}\nexport default SignUp;\n\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../Styles/styles.css\";\nimport axios from 'axios';\nimport userNm from \"../Register/signup\";\n\nclass Navbar extends Component {\n  render() {\n    // console.log(this.props.user);\n    // console.log(this.props);\n    // console.log(\"value: \" + this.props.value)\n    return (\n      <React.Fragment>\n        <nav className=\"navbar sticky-top navbar-expand-lg navbar navbar-dark bg-dark \" id=\"navbar nav\">\n          <Link to=\"/\" className=\"navbar-brand\"> Covid Check-In</Link>\n          <div className=\"collapse navbar-collapse navbar-right\" id=\"navbarNav\">\n            <ul className=\"nav navbar-nav mr-auto\">\n            </ul>\n            <ul className=\"nav navbar-nav\">\n              <Link to=\"/\" className=\"nav-link\"><li>Home</li></Link>\n\n              {/* Data that is dependent on authentication */}\n              {this.props.authenticated === false\n                ? (\n                  <React.Fragment>\n                    <Link to=\"/login\" className=\"nav-link\"><li>Login</li></Link>\n                    <Link to=\"/signup\" className=\"nav-link\"><li>SignUp</li></Link>\n                  </React.Fragment>\n                )\n                :\n                <React.Fragment>\n                  {/* <li>value: {this.props.value}</li> */}\n                  <Link to=\"/checkin\" className=\"nav-link\"><li>CheckIn</li></Link>\n                  <Link to=\"/search\" className=\"nav-link\"><li>Search</li></Link>\n                  <Link to=\"/logout\" className=\"nav-link \">Logout</Link>\n                </React.Fragment>\n\n              }\n            </ul>\n          </div>\n        </nav>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { app, googleProvider } from \"../../firebase\";\n\nimport \"firebase/auth\";\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n    this.authWithGoogle = this.authWithGoogle.bind(this);\n    this.authEmailPassword = this.authEmailPassword.bind(this);\n    this.state = {\n      redirect: false,\n    }\n  }\n\n  authWithGoogle() {\n    console.log(\"authed with google\");\n    app.auth().signInWithPopup(googleProvider)\n      .then((result, error) => {\n        if (error) {\n          console.log(error);\n        }\n        else {\n          this.setState({ redirect: true });\n        }\n      })\n  }\n\n  authEmailPassword(event) {\n    event.preventDefault();\n    console.log(\"authed with email\");\n    const email = this.emailInput.value;\n    const password = this.passwordInput.value;\n    console.log(email);\n\n    // this will check if anyone has the email \n    app.auth().fetchSignInMethodsForEmail(email)\n      .then((providers) => {\n        // determines if person doesn't have an account\n        if (providers.length === 0) {\n          // create user\n          app.auth().createUserWithEmailAndPassword(email, password);\n          this.props.history.push('/');\n          return (<Redirect to=\"/\" />);\n        }\n        else if (providers.indexOf(\"password\") === -1) {\n          // they used google \n          this.loginForm.reset();\n          alert(\"Try an alternative login, such as Google\");\n        }\n        else {\n          // sign user in\n          console.log(\"user signed in\");\n          app.auth().signInWithEmailAndPassword(email, password);\n          this.props.history.push('/');\n          return (<Redirect to=\"/\" />);\n\n        }\n      })\n      .then((user) => {\n        if (user && user.email) {\n          this.loginForm.reset();\n          this.setState({ redirect: true });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        alert(error);\n      })\n\n    // Un comment to aid in debugging\n    // console.table([{\n    //   email: this.emailInput.value,\n    //   password: this.passwordInput.value\n    // }])\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return (<Redirect to='/' />);\n    }\n    return (\n      <div className=\"loginPage\">\n        <h1>Login</h1>\n        <div className=\"googleLogin\">\n          <button className=\"btn btn-success\" onClick={() => { this.authWithGoogle() }} > Log in with Google</button>\n        </div>\n\n        <form className=\"ui form\" onSubmit={(event) => { this.authEmailPassword(event) }} ref={(form) => { this.loginForm = form }} >\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">Email address</label>\n            <input type=\"email\" name=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" ref={(input) => { this.emailInput = input }}></input>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputPassword1\">Password</label>\n            <input type=\"password\" name=\"pass\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" ref={(input) => { this.passwordInput = input }}></input>\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n        </form>\n\n      </div>\n    );\n  }\n}\nexport default Login;\n","import React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { app } from \"../../firebase\"\n\nclass Logout extends Component {\n    constructor() {\n        super();\n        this.state = {\n            redirect: false\n        }\n    }\n\n    componentWillMount() {\n        app.auth().signOut().then((user) => {\n            this.setState({ redirect: true });\n        });\n    }\n\n    render() {\n        if (this.state.redirect === true) {\n            console.log(\"logged out\");\n            return (<Redirect to=\"/\" />);\n\n        }\n        return (\n            <div style={{ height: \"100%\" }}>\n                <h1 style={{ textAlign: \"center\" }}> Logging out</h1>\n            </div>\n        )\n    }\n}\n\nexport default Logout;","import React from \"react\";\nimport \"../App.css\";\n\nfunction Home() {\n  return (\n    <div className=\"App body\">\n      <header className=\"App-header\">\n        <p>Welcome to the Covid Check-In Website!</p>\n      </header>\n\n      <div className=\"container\">\n        <div className=\"row\" id=\"padding\">\n          <div className=\"col-sm\">\n            <h3 id=\"text\">Information Section</h3>\n            <p id=\"text\">This is a website created to better apply social distancing in our regular day to day life outside of the home. Paticapants of the app would be able to checkin to stores upon arrival and be aware of how many people have checked into a particular store or area and plan accordingly.</p>\n          </div>\n          <div className=\"col-sm\">\n            <h3 id=\"text\">About Us</h3>\n\n            <p id=\"text\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem, perspiciatis. Facilis, laboriosam. Doloremque voluptate sint, dolor, et laudantium ipsa minima hic repudiandae nisi tempore unde porro ex dignissimos saepe deserunt.</p>\n          </div>\n          <div className=\"col-sm\">\n            <h3 id=\"text\">Our Vision</h3>\n            <p id=\"text\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem, perspiciatis. Facilis, laboriosam. Doloremque voluptate sint, dolor, et laudantium ipsa minima hic repudiandae nisi tempore unde porro ex dignissimos saepe deserunt.</p>\n          </div>\n        </div>\n        <small style={{ color: \"#FFFFFF\" }}>Copyright @ Covid Check-In 2020 </small>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { Component } from 'react'\n\nclass CheckIn extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"container center\" id=\"checkin\">\n                    <h1>To do</h1>\n                    <ul>\n                        <li>\n                            Displays Currently Checked in store\n                            <p>- checkin or out button</p>\n                            <p>- view # of people checked in</p>\n                        </li>\n\n                        <li>Displays previously checked in stores(password protected) </li>\n                    </ul>\n                </div>\n\n            </React.Fragment>\n        );\n    }\n}\n\nexport default CheckIn;","import React, { Component } from 'react';\nimport \"./Styles/styles.css\";\nimport { Link } from \"react-router-dom\";\n\nclass Search extends Component {\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"container\">\n                    <h1>Search</h1>\n                    <div id=\"center\">\n                        <Link to=\"/search/map\" id=\"buttons\" className=\"btn btn-secondary \">Heat Map</Link>\n                        <Link to=\"/search/filter\" className=\"btn btn-secondary\" id=\"buttons\" >Filter</Link>\n                        <Link to=\"/search/searchstore\" className=\"btn btn-secondary\" id=\"buttons\">Search Stores</Link>\n                    </div>\n\n                    <div id=\"margins \">\n                        <h1>To do</h1>\n                        <ul>\n                            <li>Heat Map </li>\n                            <li>Filtering # of people</li>\n                            <li>search by store(see # of people) </li>\n                        </ul>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Search;","import React, { Component } from 'react';\n\nclass SearchStore extends Component {\n    render() {\n        return (\n            <React.Fragment>\n\n                <form>\n                    <input className=\"form-control mr-sm-2 container\" id=\"search\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"></input>\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                </form>\n\n            </React.Fragment>\n        );\n    }\n}\n\nexport default SearchStore;","import React, { Component } from 'react'\n\nclass Filter extends Component {\n    render() {\n        return (\n            <div>Hello</div>\n        );\n    }\n}\n\nexport default Filter;","import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\n\nconst mapStyles = {\n    width: '80%',\n    height: '70%'\n};\n\nclass MapContainer extends Component {\n    constructor() {\n        super();\n        this.state = {\n            name: \"Brampton City Center\",\n            theLat: 43.716589,\n            theLng: -79.723921\n        };\n    };\n    render() {\n        return (\n            <React.Fragment>\n                <div style={{ margin: \"auto\", justifyContent: \"center\", textAlign: \"center\" }}>\n                    <h1 id=\"remove\">Maps</h1>\n                    <h5 style={{ marginTop: \"3px\", marginBottom: \"6px\" }}>Use the search bar to find locations or stores </h5>\n                    <h3>Location: {this.state.name}</h3>\n                </div>\n\n                <div className=\"container\">\n\n                    <Map\n                        google={this.props.google}\n                        zoom={14}\n                        style={mapStyles}\n                        initialCenter={{\n                            lat: this.state.theLat,\n                            lng: this.state.theLng\n                        }}\n                    />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyDoSD0RfKO_FVMJ9I14kMkTowIkEUJYPyA'\n})(MapContainer);","import React, { Component } from 'react'\n\nclass createStore extends Component {\n\n    render() {\n        return (\n            <div className=\"createStore container\">\n                <h1>Add Store</h1>\n                {/*  onSubmit={(event) => { this.authEmailPassword(event) }} ref={(form) => { this.loginForm = form }}  */}\n                <form method=\"POST\" action=\"/admin/newstore\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputEmail1\">Store/Location Name</label>\n                        {/* ref={(input) => { this.emailInput = input }} */}\n                        <input type=\"text\" name=\"storeName\" className=\"form-control\" id=\"storeName\" aria-describedby=\"storeName\" placeholder=\" store/Location Name\" ></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"longitude\">Longitude</label>\n                        <input type=\"number\" step=\"0.0001\" name=\"storeLng\" className=\"form-control\" id=\"storeLng\" placeholder=\"Longitude of Store\"></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"latitude\">Latitude</label>\n                        <input type=\"number\" step=\"0.0001\" name=\"storeLat\" className=\"form-control\" id=\"storeLat\" placeholder=\"Latitude of Store\"></input>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">Create Store Location</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default createStore;","import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass AllStoresNIU extends Component {\n    // state={storeName, storeLng, storeLat};\n    render(storeName, storeLng, storeLat) {\n        // this is the individual items to be rendered therefore stores\n        // const elements = ['one', 'two', 'three'];\n        console.log({storeName});\n        console.log({storeLng});\n        console.log({storeLat});\n        console.log(storeName);\n        console.log(storeLng);\n        console.log(storeLat);\n        const elements = [storeName, storeLng, storeLat];\n\n        // array that renders the stores\n        const items = []\n      \n        // for loop to render each store\n        for (const [index, value] of elements.entries()) {\n            // puts components into array, therefore divs will be rendered for each store\n            items.push(\n                // value is the infomration to be placed in div, therefore stores\n                <div key={index}>{value}</div>\n                )\n        }\n      \n        return (\n            <React.Fragment>\n            <div>\n            <h1>all stores</h1>\n                <div>\n                    {/* <h1>storeName</h1>\n                    <h1>storeLng</h1>\n                    <h1>storeLat</h1> */}\n                    <div>\n                        <h1>Store: </h1>\n                        {items}\n                    </div>\n                </div>\n            </div>\n        \n            </React.Fragment>\n\n        );\n    }\n}\n\nclass AllStores extends React.Component {\n    state = {\n      stores: []\n    };\n  \n    componentDidMount() {\n      axios.get('/api/stores')\n        .then(res => {\n          // sets array of JSON objects to the vairble name stores\n          const stores = res.data;\n          // console.log(stores);\n          // console.log( typeof stores);\n          this.setState({ stores });\n        })\n    }\n  \n    render() {\n      return (\n        <ul>\n          { this.state.stores.map(store => <li>{store.name}</li>)}\n        </ul>\n      )\n    }\n}\n\nexport default AllStores;","import React, { Component } from 'react'\nimport Navbar from \"./components/Navbar/navbar\";\nimport { app } from \"./firebase\";\nimport Login from \"./components/Register/login\";\nimport SignUp from \"./components/Register/signup\";\nimport Logout from \"./components/Register/logout\";\nimport Home from \"./components/home\";\nimport CheckIn from \"./components/checkin\";\nimport Search from \"./components/search\";\n// import Map from \"./components/map\";\nimport \"./components/Styles/loadingStyles.css\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport SearchStore from './components/Search/searchStore';\nimport Filter from './components/Search/filter';\nimport Map from './components/Search/map';\nimport createStore from \"./components/Admin/createStore\";\nimport allStores from \"./components/Admin/allStores\";\n\nclass Apps extends Component {\n    constructor() {\n        super();\n        this.state = {\n            authenticated: false,\n            loading: true\n        };\n \n    };\n    // callbackFunction = (childData) => {\n    //     this.setState({userName: childData});\n    // };\n\n    componentWillMount() {\n        this.removeAuthListener = app.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({\n                    authenticated: true,\n                    loading: false\n                });\n            }\n            else {\n                this.setState({\n                    authenticated: false,\n                    loading: false\n                });\n            }\n        })\n    }\n    componentWillUnmount() {\n        this.removeAuthListener();\n    }\n\n    render() {\n        // it takes time in-between getting user authentication therefore something is loaded in its place\n        if (this.state.loading === true) {\n            return (\n                <div className=\"loading\">Loading&#8230;</div>\n            );\n        }\n        return (\n            <React.Fragment>\n            {/* <SignUp parentCallback = {this.callbackFunction}/> */}\n            {/* <p> {this.state.userName} </p> */}\n            <Router>\n                {/* <p>My Token = {window.token}</p> */}\n                <Navbar authenticated={this.state.authenticated} userName={this.state.userName} value={this.state.value}/>\n                {/* Needs to be here so that state an ca be updated */}\n\n                {/* Switch is used to prevent multiple components from running at once when using routing */}\n                <Switch>\n                    {/* exact is used to define an absolute route, so only urls contain nothing or the slash will cause this page to render */}\n                    <Route exact path=\"/\" component={Home} />\n\n                    {/* this only renders the login component when the url typed in is login */}\n                    <Route path=\"/login\" component={Login} />\n                    {/* <Route path=\"/signup\" component={SignUp} handleChange={this.state.handleChange} handleSubmit={this.state.handleSubmit} value={this.state.value} var={\"dog\"}/> */}\n                    <Route path=\"/signup\" component={SignUp} />\n                    {/* <Route path=\"/signup\" render={(props) => <SignUp {...props} handleChange={this.state.handleChange} handleSubmit={this.state.handleSubmit} value={this.state.value} var={\"dog\"}/> }/> */}\n                    {/* <Route path=\"/signup\" render={(props) => (<SignUp {...props} handleChange={this.state.handleChange} handleSubmit={this.state.handleSubmit} value={this.state.value} var={\"dog\"}/> )}/> */}\n                    \n                    <Route path=\"/checkin\" component={CheckIn} />\n                    <Route exact path=\"/logout\" component={Logout} />\n\n                    <Route exact path=\"/search/map\" component={Map} />\n                    <Route exact path=\"/search/filter\" component={Filter} />\n                    <Route exact path=\"/search/searchstore\" component={SearchStore} />\n                    <Route path=\"/search\" component={Search} />\n                    <Route path=\"/admin/newstore\" component={createStore} />\n                    <Route path=\"/admin/stores\" component={allStores} />\n\n\n                    {/* <Route path=\"/search/maps\" component={Map} /> */}\n                </Switch>\n            </Router>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Apps;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Apps from \"./Apps\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Navbar /> */}\n    <Apps />\n    {/* <allStores storeName={storeName} storeLng={storeLng} storeLat={storeLat} /> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}